using System.Collections.Generic;

namespace Improbable.Gdk.Core.Editor
{
    /// <summary>
    /// Unity's GUIUtility.GetStateObject changes based on the structure of the GUI, for example when expanding or collapsing foldouts.
    /// Even with hints, tracking the state objects goes awry.
    /// This is a simpler implementation, meant to be used with object hashes generated by the call site, which at least has insight into
    /// what parts of the object will be stable enough to track.
    /// </summary>
    public class UiStateManager
    {
        private readonly Dictionary<int, object> stateObjects = new Dictionary<int, object>();

        public T GetStateObject<T>(int hash) where T : new()
        {
            if (!stateObjects.TryGetValue(hash, out var value))
            {
                value = new T();
                stateObjects.Add(hash, value);
            }

            return (T) value;
        }

        public void SetStateObject<T>(int hash, T obj)
        {
            stateObjects[hash] = obj;
        }
    }
}
