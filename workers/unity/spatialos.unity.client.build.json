{
  "tasks": [
    {
      "name": "Codegen",
      "steps": [
        {
          "name": "Dependencies",
          "arguments": [
            "worker_package",
            "unpack"
          ]
        },
        {
          "name": "C#",
          "arguments": [
            "process_schema",
            "generate",
            "--cachePath=.spatialos/schema_codegen_cache_usr",
            "--output=Assets/improbable/generated",
            "--language=csharp"
          ]
        },
        {
          "name": "Json AST",
          "arguments": [
            "process_schema",
            "generate",
            "--cachePath=.spatialos/schema_codegen_cache_json_usr",
            "--output=improbable/json/usr",
            "--language=ast_json"
          ]
        },
        {
          "name": "Build GDK Codegenerator",
          "command": "bash",
          "arguments": [
            "../../code_generator/build-code-generator.sh"
          ]
        },
        {
          "name": "GDK Codegen",
          "command": "../../bin/code_generator/GdkCodeGenerator.exe",
          "arguments": [
              "--json-dir=./improbable/json/usr",
              "--output-dir=./Assets/Generated/"
          ]
        }
      ]
    },
    {
      "name": "Build",
      "steps": [
        {
          "name": "Codegen",
          "arguments": [
            "invoke-task",
            "Codegen"
          ]
        },
        {
          "name": "Artifact",
          "command": "../../tools/unity_invoker/${IMPROBABLE_PLATFORM_NAME}/unity_invoker",
          "arguments": [
            "--",
            "-batchmode",
            "-quit",
            "-logfile",
            "../../logs/${IMPROBABLE_WORKER_NAME}/unity_invoke.log",
            "-projectPath",
            "${IMPROBABLE_WORKER_DIR}",
            "-executeMethod",
            "Improbable.Gdk.Legacy.BuildSystem.WorkerBuilder.Build",
            "+buildWorkerTypes",
            "UnityClient",
            "+buildTarget",
            "${IMPROBABLE_BUILD_TARGET}"
          ]
        }
      ]
    },
    {
      "name": "Clean",
      "steps": [
        {
          "name": "Dependencies",
          "arguments": [
            "worker_package",
            "clean"
          ]
        }
      ]
    }
  ]
}