<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#
    var fieldDetailsList = GetFieldDetailsList();
    var componentDetails = GetComponentDetails();
    var generatedHeader = CommonGeneratorUtils.GetGeneratedHeader();
    var generator = new UnityReferenceTypeProviderContent();
#>
<#= generatedHeader #>

using System;
using System.Collections.Generic;
using System.Linq;

namespace <#= qualifiedNamespace #>
{
    public partial class <#= componentDetails.ComponentName #>
    {
        internal class ReferenceTypeProviders 
        {
            <#= CommonGeneratorUtils.IndentEveryNewline(generator.Generate("Updates", $"List<{componentDetails.TypeName}.Update>"), 3) #>

<# foreach(var fieldDetails in fieldDetailsList) { #>
<# if (!fieldDetails.IsBlittable) { #>
            <#= CommonGeneratorUtils.IndentEveryNewline(generator.Generate(fieldDetails.PascalCaseName, fieldDetails.Type), 3) #>

<# } #>
<# } #>
        }
    }
}
