<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#
    var fieldDetailsList = GetFieldDetailsList();
    var componentDetails = GetComponentDetails();
    var generatedHeader = CommonGeneratorUtils.GetGeneratedHeader();
#>
<#= generatedHeader #>

using Unity.Mathematics;
using Unity.Entities;
using Improbable.Gdk.Core;

namespace <#= qualifiedNamespace #>
{ 
    public struct <#= componentDetails.TypeName #> : IComponentData, ISpatialComponentData
    {
        public bool1 DirtyBit { get; set; }
<# foreach(var fieldDetails in fieldDetailsList) { #>

        private <#= fieldDetails.Type #> <#= fieldDetails.CamelCaseName #>;

        public <#= fieldDetails.Type #> <#= fieldDetails.PascalCaseName #>
        {
            get { return <#= fieldDetails.CamelCaseName #>; }
            set
            {
                DirtyBit = true;
                <#= fieldDetails.CamelCaseName #> = value;
            }
        }
<# } #>
    }
}
